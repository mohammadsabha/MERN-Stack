import React, { useReducer } from 'react';

// Regular expression for email validation
const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;

const initialState = {
  firstName: {
    value: '',
    error: null,
  },
  lastName: {
    value: '',
    error: null,
  },
  email: {
    value: '',
    error: null,
  },
};

const reducer = (state, action) => {
  switch (action.type) {
    case 'CHANGE':
      return {
        ...state,
        [action.field]: {
          value: action.value,
          error: action.error,
        },
      };
    default:
      return state;
  }
};

const validators = {
  firstName: value => (value.trim() === '' ? 'First name is required' : null),
  lastName: value => (value.trim() === '' ? 'Last name is required' : null),
  email: value =>
    !emailRegex.test(value) ? 'Invalid email address' : null,
};

const FormValidation = () => {
  const [state, dispatch] = useReducer(reducer, initialState);

  const handleChange = e => {
    const { name, value } = e.target;
    const error = validators[name](value);
    dispatch({ type: 'CHANGE', field: name, value, error });
  };

  const handleSubmit = e => {
    e.preventDefault();
    // Perform form submission logic here
    // if the form is valid
  };

  return (
    <form onSubmit={handleSubmit}>
      <div>
        <label htmlFor="firstName">First Name</label>
        <input
          type="text"
          id="firstName"
          name="firstName"
          value={state.firstName.value}
          onChange={handleChange}
        />
        {state.firstName.error && (
          <p className="error">{state.firstName.error}</p>
        )}
      </div>
      <div>
        <label htmlFor="lastName">Last Name</label>
        <input
          type="text"
          id="lastName"
          name="lastName"
          value={state.lastName.value}
          onChange={handleChange}
        />
        {state.lastName.error && (
          <p className="error">{state.lastName.error}</p>
        )}
      </div>
      <div>
        <label htmlFor="email">Email</label>
        <input
          type="text"
          id="email"
          name="email"
          value={state.email.value}
          onChange={handleChange}
        />
        {state.email.error && (
          <p className="error">{state.email.error}</p>
        )}
      </div>
      <button type="submit">Submit</button>
    </form>
  );
};

export default FormValidation;
